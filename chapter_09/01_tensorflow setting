site : https://itnext.io/installing-tensorflow-2-3-0-for-raspberry-pi3-4-debian-buster-11447cb31fc4

Step 0: Check Raspberry Pi (GNU/Linux 10 (Buster)), Python and Pip version.
$ cat /etc/os-release
$ python3 --version
$ pip3 --version

Step 1: Make sure everything is updated.
$ sudo apt update
$ sudo apt dist-upgrade
$ sudo apt clean

Step 2: Upgrade pip (>19.0), setuptools (â‰¥41.0.0) and install Tensorflow 2 dependencies.
$ sudo pip install --upgrade pip
$ sudo pip3 install --upgrade setuptools
$ sudo pip3 install numpy==1.19.0
$ sudo apt-get install -y libhdf5-dev libc-ares-dev libeigen3-dev gcc gfortran python-dev libgfortran5 libatlas3-base libatlas-base-dev libopenblas-dev libopenblas-base libblas-dev liblapack-dev cython libatlas-base-dev openmpi-bin libopenmpi-dev python3-dev
$ sudo pip3 install keras_applications==1.0.8 --no-deps
$ sudo pip3 install keras_preprocessing==1.1.0 --no-deps
$ sudo pip3 install h5py==2.9.0
$ sudo pip3 install pybind11
$ pip3 install -U --user six wheel mock

Step 3: Install Tensorflow 2*
$ wget "https://raw.githubusercontent.com/PINTO0309/Tensorflow-bin/master/tensorflow-2.6.0-cp37-none-linux_aarch64_numpy1195_download.sh"
$ sudo chmod +x tensorflow-2.3.0-cp37-none-linux_armv7l_download.sh
$ ./tensorflow-2.3.0-cp37-none-linux_armv7l_download.sh
$ sudo pip3 uninstall tensorflow
$ sudo -H pip3 install tensorflow-2.3.0-cp37-none-linux_armv7l.whl

Step 4: Check if TF 2 has been installed correctly
$ python3 
>>> import tensorflow
>>> tensorflow.__version__
'2.3.0'
>>> exit()


[ ML test example ]
import tensorflow as tf
mnist = tf.keras.datasets.mnist

(x_train, y_train),(x_test, y_test) = mnist.load_data()
x_train, x_test = x_train / 255.0, x_test / 255.0

model = tf.keras.models.Sequential([
  tf.keras.layers.Flatten(input_shape=(28, 28)),
  tf.keras.layers.Dense(128, activation='relu'),
  tf.keras.layers.Dropout(0.2),
  tf.keras.layers.Dense(10, activation='softmax')
])

model.compile(optimizer='adam',
              loss='sparse_categorical_crossentropy',
              metrics=['accuracy'])

model.fit(x_train, y_train, epochs=5)
model.evaluate(x_test, y_test)
